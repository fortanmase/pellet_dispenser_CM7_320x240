#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_TCMI_____TTF_26_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0053, -1 },  // (First char = [0x0053, S], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0067, -1 },  // (First char = [0x0067, g], Second char = [0x002E, period], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0070,  1 },  // (First char = [0x0070, p], Second char = [0x002E, period], Kerning dist = 1)
    { 0x0072, -2 },  // (First char = [0x0072, r], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0076, -2 },  // (First char = [0x0076, v], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -2)
    { 0x0054,  1 },  // (First char = [0x0054, T], Second char = [0x0051, Q], Kerning dist = 1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0051, -2 },  // (First char = [0x0051, Q], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0063,  1 },  // (First char = [0x0063, c], Second char = [0x0068, h], Kerning dist = 1)
    { 0x0063,  1 },  // (First char = [0x0063, c], Second char = [0x006C, l], Kerning dist = 1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x006D, m], Kerning dist = -2)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0056, -2 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -2)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0061,  1 },  // (First char = [0x0061, a], Second char = [0x0074, t], Kerning dist = 1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0062,  1 },  // (First char = [0x0062, b], Second char = [0x0075, u], Kerning dist = 1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0061,  1 },  // (First char = [0x0061, a], Second char = [0x0076, v], Kerning dist = 1)
    { 0x0064,  1 },  // (First char = [0x0064, d], Second char = [0x0076, v], Kerning dist = 1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0076, v], Kerning dist = 1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0063,  1 },  // (First char = [0x0063, c], Second char = [0x0079, y], Kerning dist = 1)
    { 0x0072,  1 },  // (First char = [0x0072, r], Second char = [0x0079, y], Kerning dist = 1)
};
