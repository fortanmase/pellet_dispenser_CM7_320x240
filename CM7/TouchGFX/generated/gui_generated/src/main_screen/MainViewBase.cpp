/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    backgndBox.setPosition(0, 0, 320, 240);
    backgndBox.setColor(touchgfx::Color::getColorFromRGB(245, 245, 245));
    add(backgndBox);

    functionContainer.setPosition(0, 0, 320, 240);
    functionContainer.setVisible(false);
    homeButton.setXY(43, 2);
    homeButton.setBitmaps(touchgfx::Bitmap(BITMAP_HOME_RELEASED_36PX_ID), touchgfx::Bitmap(BITMAP_HOME_PRESSED_36PX_ID));
    homeButton.setAction(buttonCallback);
    functionContainer.add(homeButton);

    backButton.setXY(0, 0);
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_CHEVRON_LEFT_RELEASED_40PX_ID), touchgfx::Bitmap(BITMAP_CHEVRON_LEFT_PRESSED_40PX_ID));
    backButton.setAction(buttonCallback);
    functionContainer.add(backButton);

    infoContainer.setPosition(0, 0, 320, 240);
    infoContainer.setVisible(false);
    infoHeaderText.setXY(108, 5);
    infoHeaderText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    infoHeaderText.setLinespacing(0);
    infoHeaderText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIGF));
    infoContainer.add(infoHeaderText);

    scrollableContainer1.setPosition(0, 41, 320, 209);
    scrollableContainer1.setScrollbarsColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    scrollableContainer1.setScrollbarsAlpha(255);
    infoTextArea.setPosition(0, -1, 320, 995);
    infoTextArea.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    infoTextArea.setLinespacing(0);
    infoTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PMMS));
    scrollableContainer1.add(infoTextArea);

    infoContainer.add(scrollableContainer1);

    functionContainer.add(infoContainer);

    dispenserSettingsContainer.setPosition(0, 0, 320, 240);
    pelSpeedValue.setXY(214, 160);
    pelSpeedValue.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    pelSpeedValue.setLinespacing(0);
    Unicode::snprintf(pelSpeedValueBuffer, PELSPEEDVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HK8T).getText());
    pelSpeedValue.setWildcard(pelSpeedValueBuffer);
    pelSpeedValue.resizeToCurrentText();
    pelSpeedValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2HSR));
    dispenserSettingsContainer.add(pelSpeedValue);

    pelSpeedIncButton.setXY(280, 155);
    pelSpeedIncButton.setBitmaps(touchgfx::Bitmap(BITMAP_CHEVRON_RIGHT_RELEASED_40PX_ID), touchgfx::Bitmap(BITMAP_CHEVRON_RIGHT_PRESSED_40PX_ID));
    pelSpeedIncButton.setAction(buttonCallback);
    dispenserSettingsContainer.add(pelSpeedIncButton);

    pelSpeedDecButton.setXY(157, 155);
    pelSpeedDecButton.setBitmaps(touchgfx::Bitmap(BITMAP_CHEVRON_LEFT_RELEASED_40PX_ID), touchgfx::Bitmap(BITMAP_CHEVRON_LEFT_PRESSED_40PX_ID));
    pelSpeedDecButton.setAction(buttonCallback);
    dispenserSettingsContainer.add(pelSpeedDecButton);

    dispenserSpeed.setXY(5, 160);
    dispenserSpeed.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    dispenserSpeed.setLinespacing(0);
    dispenserSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0J8R));
    dispenserSettingsContainer.add(dispenserSpeed);

    pelIntervDecButton.setXY(157, 100);
    pelIntervDecButton.setBitmaps(touchgfx::Bitmap(BITMAP_CHEVRON_LEFT_RELEASED_40PX_ID), touchgfx::Bitmap(BITMAP_CHEVRON_LEFT_PRESSED_40PX_ID));
    pelIntervDecButton.setAction(buttonCallback);
    dispenserSettingsContainer.add(pelIntervDecButton);

    pelIntervIncButton.setXY(280, 100);
    pelIntervIncButton.setBitmaps(touchgfx::Bitmap(BITMAP_CHEVRON_RIGHT_RELEASED_40PX_ID), touchgfx::Bitmap(BITMAP_CHEVRON_RIGHT_PRESSED_40PX_ID));
    pelIntervIncButton.setAction(buttonCallback);
    dispenserSettingsContainer.add(pelIntervIncButton);

    pelIntervValue.setXY(233, 105);
    pelIntervValue.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    pelIntervValue.setLinespacing(0);
    Unicode::snprintf(pelIntervValueBuffer, PELINTERVVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JOOO).getText());
    pelIntervValue.setWildcard(pelIntervValueBuffer);
    pelIntervValue.resizeToCurrentText();
    pelIntervValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_23F4));
    dispenserSettingsContainer.add(pelIntervValue);

    dispenseIntervalText.setXY(2, 105);
    dispenseIntervalText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    dispenseIntervalText.setLinespacing(0);
    dispenseIntervalText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X150));
    dispenserSettingsContainer.add(dispenseIntervalText);

    pelQuantValue.setXY(219, 55);
    pelQuantValue.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    pelQuantValue.setLinespacing(0);
    Unicode::snprintf(pelQuantValueBuffer, PELQUANTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G92Q).getText());
    pelQuantValue.setWildcard(pelQuantValueBuffer);
    pelQuantValue.resizeToCurrentText();
    pelQuantValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2Z7F));
    dispenserSettingsContainer.add(pelQuantValue);

    pelQuantIncButton.setXY(280, 50);
    pelQuantIncButton.setBitmaps(touchgfx::Bitmap(BITMAP_CHEVRON_RIGHT_RELEASED_40PX_ID), touchgfx::Bitmap(BITMAP_CHEVRON_RIGHT_PRESSED_40PX_ID));
    pelQuantIncButton.setAction(buttonCallback);
    dispenserSettingsContainer.add(pelQuantIncButton);

    pelQuantDecButton.setXY(157, 50);
    pelQuantDecButton.setBitmaps(touchgfx::Bitmap(BITMAP_CHEVRON_LEFT_RELEASED_40PX_ID), touchgfx::Bitmap(BITMAP_CHEVRON_LEFT_PRESSED_40PX_ID));
    pelQuantDecButton.setAction(buttonCallback);
    dispenserSettingsContainer.add(pelQuantDecButton);

    dispenseQuantityText.setXY(5, 50);
    dispenseQuantityText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    dispenseQuantityText.setLinespacing(0);
    dispenseQuantityText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TPUD));
    dispenserSettingsContainer.add(dispenseQuantityText);

    dispenserHeaderText.setXY(108, 2);
    dispenserHeaderText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    dispenserHeaderText.setLinespacing(0);
    dispenserHeaderText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BDDZ));
    dispenserSettingsContainer.add(dispenserHeaderText);

    functionContainer.add(dispenserSettingsContainer);

    soundSettingsContainer.setPosition(0, 0, 320, 240);
    soundSettingsContainer.setVisible(false);
    testSoundButton.setXY(260, 170);
    testSoundButton.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_50X30_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_50X30_ID));
    soundSettingsContainer.add(testSoundButton);

    testSoundText.setXY(5, 170);
    testSoundText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    testSoundText.setLinespacing(0);
    testSoundText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NJZQ));
    soundSettingsContainer.add(testSoundText);

    tempBox.setPosition(153, 133, 157, 25);
    tempBox.setColor(touchgfx::Color::getColorFromRGB(245, 245, 245));
    soundSettingsContainer.add(tempBox);

    tempChevImg.setXY(270, 125);
    tempChevImg.setBitmap(touchgfx::Bitmap(BITMAP_CHEVRON_DOWN_RELEASED_40PX_ID));
    soundSettingsContainer.add(tempChevImg);

    tempTextArea.setPosition(170, 134, 100, 22);
    tempTextArea.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    tempTextArea.setLinespacing(0);
    tempTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YSS6));
    soundSettingsContainer.add(tempTextArea);

    enableAlertsText.setXY(5, 130);
    enableAlertsText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    enableAlertsText.setLinespacing(0);
    enableAlertsText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IDP2));
    soundSettingsContainer.add(enableAlertsText);

    muteButton.setXY(260, 91);
    muteButton.setBitmaps(touchgfx::Bitmap(BITMAP_TOGGLE_BUTTON_OFF_50X30_ID), touchgfx::Bitmap(BITMAP_TOGGLE_BUTTON_ON_50X30_ID));
    soundSettingsContainer.add(muteButton);

    muteText.setXY(5, 90);
    muteText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    muteText.setLinespacing(0);
    muteText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q08R));
    soundSettingsContainer.add(muteText);

    volumeSlider.setXY(131, 52);
    volumeSlider.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDER_BACKGROUND_ID), touchgfx::Bitmap(BITMAP_SLIDER_FILL_ID), touchgfx::Bitmap(BITMAP_SLIDER_INDICATOR_ID));
    volumeSlider.setupHorizontalSlider(16, 11, 0, 0, 160);
    volumeSlider.setValueRange(0, 100);
    volumeSlider.setValue(50);
    soundSettingsContainer.add(volumeSlider);

    volumeText.setXY(5, 50);
    volumeText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    volumeText.setLinespacing(0);
    volumeText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RFA7));
    soundSettingsContainer.add(volumeText);

    soundHeaderText.setPosition(125, 0, 71, 36);
    soundHeaderText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    soundHeaderText.setLinespacing(0);
    soundHeaderText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZQDP));
    soundSettingsContainer.add(soundHeaderText);

    functionContainer.add(soundSettingsContainer);

    displaySettingsContainer.setPosition(0, 2, 320, 238);
    displaySettingsContainer.setVisible(false);
    screenToutDecButton.setXY(160, 168);
    screenToutDecButton.setBitmaps(touchgfx::Bitmap(BITMAP_CHEVRON_LEFT_RELEASED_40PX_ID), touchgfx::Bitmap(BITMAP_CHEVRON_LEFT_PRESSED_40PX_ID));
    screenToutDecButton.setAction(buttonCallback);
    displaySettingsContainer.add(screenToutDecButton);

    screenToutIncButton.setXY(283, 168);
    screenToutIncButton.setBitmaps(touchgfx::Bitmap(BITMAP_CHEVRON_RIGHT_RELEASED_40PX_ID), touchgfx::Bitmap(BITMAP_CHEVRON_RIGHT_PRESSED_40PX_ID));
    screenToutIncButton.setAction(buttonCallback);
    displaySettingsContainer.add(screenToutIncButton);

    screenToutValue.setXY(202, 170);
    screenToutValue.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    screenToutValue.setLinespacing(0);
    Unicode::snprintf(screenToutValueBuffer, SCREENTOUTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_X3HV).getText());
    screenToutValue.setWildcard(screenToutValueBuffer);
    screenToutValue.resizeToCurrentText();
    screenToutValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GLUJ));
    displaySettingsContainer.add(screenToutValue);

    screenTimeoutText.setPosition(5, 170, 148, 32);
    screenTimeoutText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    screenTimeoutText.setLinespacing(0);
    screenTimeoutText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_APBT));
    displaySettingsContainer.add(screenTimeoutText);

    darkThemeButton.setXY(260, 131);
    darkThemeButton.setBitmaps(touchgfx::Bitmap(BITMAP_TOGGLE_BUTTON_OFF_50X30_ID), touchgfx::Bitmap(BITMAP_TOGGLE_BUTTON_ON_50X30_ID));
    darkThemeButton.setAction(buttonCallback);
    displaySettingsContainer.add(darkThemeButton);

    darkThemeText.setPosition(5, 130, 117, 32);
    darkThemeText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    darkThemeText.setLinespacing(0);
    darkThemeText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YSQN));
    displaySettingsContainer.add(darkThemeText);

    autoBrightnessButton.setXY(260, 91);
    autoBrightnessButton.setBitmaps(touchgfx::Bitmap(BITMAP_TOGGLE_BUTTON_OFF_50X30_ID), touchgfx::Bitmap(BITMAP_TOGGLE_BUTTON_ON_50X30_ID));
    displaySettingsContainer.add(autoBrightnessButton);

    autoBrightnessText.setPosition(5, 90, 154, 32);
    autoBrightnessText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    autoBrightnessText.setLinespacing(0);
    autoBrightnessText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B0VH));
    displaySettingsContainer.add(autoBrightnessText);

    brightnessSlider.setXY(131, 50);
    brightnessSlider.setBitmaps(touchgfx::Bitmap(BITMAP_SLIDER_BACKGROUND_ID), touchgfx::Bitmap(BITMAP_SLIDER_FILL_ID), touchgfx::Bitmap(BITMAP_SLIDER_INDICATOR_ID));
    brightnessSlider.setupHorizontalSlider(16, 11, 0, 0, 160);
    brightnessSlider.setValueRange(0, 100);
    brightnessSlider.setValue(50);
    displaySettingsContainer.add(brightnessSlider);

    brightnessText.setPosition(5, 50, 100, 32);
    brightnessText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    brightnessText.setLinespacing(0);
    brightnessText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OMID));
    displaySettingsContainer.add(brightnessText);

    displayHeaderText.setXY(120, 0);
    displayHeaderText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    displayHeaderText.setLinespacing(0);
    displayHeaderText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OLSB));
    displaySettingsContainer.add(displayHeaderText);

    functionContainer.add(displaySettingsContainer);

    settingsContainer.setPosition(0, 0, 320, 240);
    settingsContainer.setVisible(false);
    dispenserSettingsText.setXY(70, 128);
    dispenserSettingsText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    dispenserSettingsText.setLinespacing(0);
    dispenserSettingsText.setTypedText(touchgfx::TypedText(T_DISPENSSETTID));
    settingsContainer.add(dispenserSettingsText);

    dispenserSettingsButton.setXY(0, 124);
    dispenserSettingsButton.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_320X42_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_320X42_ID), touchgfx::Bitmap(BITMAP_PELLETS3_RELEASED_32X32_ID), touchgfx::Bitmap(BITMAP_PELLETS3_PRESSED_32X32_ID));
    dispenserSettingsButton.setIconXY(5, 5);
    dispenserSettingsButton.setAction(buttonCallback);
    settingsContainer.add(dispenserSettingsButton);

    soundSettingsText.setXY(87, 86);
    soundSettingsText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    soundSettingsText.setLinespacing(0);
    soundSettingsText.setTypedText(touchgfx::TypedText(T_SOUNDSETTID));
    settingsContainer.add(soundSettingsText);

    soundSettingsButton.setXY(0, 82);
    soundSettingsButton.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_320X42_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_320X42_ID), touchgfx::Bitmap(BITMAP_SOUND_RELEASED_32X32_ID), touchgfx::Bitmap(BITMAP_SOUND_PRESSED_32X32_ID));
    soundSettingsButton.setIconXY(5, 5);
    soundSettingsButton.setAction(buttonCallback);
    settingsContainer.add(soundSettingsButton);

    displaySettingsText.setXY(81, 44);
    displaySettingsText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    displaySettingsText.setLinespacing(0);
    displaySettingsText.setTypedText(touchgfx::TypedText(T_DISPSETTID));
    settingsContainer.add(displaySettingsText);

    displaySettingsButton.setXY(0, 40);
    displaySettingsButton.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_320X42_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_320X42_ID), touchgfx::Bitmap(BITMAP_BRIGHTNESS_RELEASED_32X32_ID), touchgfx::Bitmap(BITMAP_BRIGHTNESS_PRESSED_32X32_ID));
    displaySettingsButton.setIconXY(5, 5);
    displaySettingsButton.setAction(buttonCallback);
    settingsContainer.add(displaySettingsButton);

    settingsHeaderText.setXY(118, 0);
    settingsHeaderText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    settingsHeaderText.setLinespacing(0);
    settingsHeaderText.setTypedText(touchgfx::TypedText(T_SETTHEADID));
    settingsContainer.add(settingsHeaderText);

    functionContainer.add(settingsContainer);

    add(functionContainer);

    mainContainer.setPosition(0, 0, 320, 240);
    manualDispenseButton.setXY(195, 179);
    manualDispenseButton.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_110X50_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_110X50_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_PAN_TOOL_45_45_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_PAN_TOOL_45_45_E8F6FB_SVG_ID));
    manualDispenseButton.setIconXY(30, 1);
    mainContainer.add(manualDispenseButton);

    autoDispenseButton.setXY(15, 179);
    autoDispenseButton.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_RELEASED_110X50_ID), touchgfx::Bitmap(BITMAP_BUTTON_PRESSED_110X50_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_AUTORENEW_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_AUTORENEW_50_50_E8F6FB_SVG_ID));
    autoDispenseButton.setIconXY(30, 0);
    mainContainer.add(autoDispenseButton);

    settingsButton.setXY(2, 2);
    settingsButton.setBitmaps(touchgfx::Bitmap(BITMAP_SETTINGS_RELEASED_36PX_ID), touchgfx::Bitmap(BITMAP_SETTINGS_PRESSED_36PX_ID));
    settingsButton.setAction(buttonCallback);
    mainContainer.add(settingsButton);

    infoButton.setXY(44, 2);
    infoButton.setBitmaps(touchgfx::Bitmap(BITMAP_INFO_RELEASED_36PX_ID), touchgfx::Bitmap(BITMAP_INFO_PRESSED_36PX_ID));
    infoButton.setAction(buttonCallback);
    mainContainer.add(infoButton);

    statusContainer.setPosition(0, 42, 320, 110);
    dispensedContainer.setPosition(0, 55, 320, 55);
    dispensedResetButton.setXY(261, 3);
    dispensedResetButton.setBitmaps(touchgfx::Bitmap(BITMAP_RESET_RELEASED_48X48_ID), touchgfx::Bitmap(BITMAP_RESET_PRESSED_48X48_ID));
    dispensedContainer.add(dispensedResetButton);

    dispensedPellets.setPosition(5, 11, 240, 33);
    dispensedPellets.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    dispensedPellets.setLinespacing(0);
    dispensedPellets.setWildcard(touchgfx::TypedText(T_DISPENSEDPELLETS).getText());
    dispensedPellets.setTypedText(touchgfx::TypedText(T_DISPPELLID));
    dispensedContainer.add(dispensedPellets);

    statusContainer.add(dispensedContainer);

    dispensingContainer.setPosition(0, 0, 320, 55);
    dispensingContainer.setVisible(false);
    dispenserDispensing.setPosition(5, 11, 255, 33);
    dispenserDispensing.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    dispenserDispensing.setLinespacing(0);
    dispenserDispensing.setWildcard(touchgfx::TypedText(T_NUMPELLETS).getText());
    dispenserDispensing.setTypedText(touchgfx::TypedText(T_DISPDISPEID));
    dispensingContainer.add(dispenserDispensing);

    dispenseInProgressTexture.setXY(261, 3);
    dispenseInProgressTexture.setBitmap(touchgfx::Bitmap(BITMAP_LOADING_48X48_ID));
    dispenseInProgressTexture.setWidth(48);
    dispenseInProgressTexture.setHeight(48);
    dispenseInProgressTexture.setBitmapPosition(0.0f, 0.0f);
    dispenseInProgressTexture.setScale(1.0f);
    dispenseInProgressTexture.setCameraDistance(1000.0f);
    dispenseInProgressTexture.setOrigo(24.0f, 24.0f, 1000.0f);
    dispenseInProgressTexture.setCamera(24.0f, 24.0f);
    dispenseInProgressTexture.setAngles(0.0f, 0.0f, 0.0f);
    dispenseInProgressTexture.setRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    dispensingContainer.add(dispenseInProgressTexture);

    statusContainer.add(dispensingContainer);

    stalledContainer.setPosition(0, 0, 320, 55);
    dispenserStalledText.setPosition(5, 11, 182, 33);
    dispenserStalledText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    dispenserStalledText.setLinespacing(0);
    dispenserStalledText.setTypedText(touchgfx::TypedText(T_DISPSTALLID));
    stalledContainer.add(dispenserStalledText);

    statusStalledTexture.setXY(261, 3);
    statusStalledTexture.setBitmap(touchgfx::Bitmap(BITMAP_FAILURE_48X48_ID));
    statusStalledTexture.setWidth(48);
    statusStalledTexture.setHeight(48);
    statusStalledTexture.setBitmapPosition(0.0f, 0.0f);
    statusStalledTexture.setScale(1.0f);
    statusStalledTexture.setCameraDistance(1000.0f);
    statusStalledTexture.setOrigo(24.0f, 24.0f, 1000.0f);
    statusStalledTexture.setCamera(24.0f, 24.0f);
    statusStalledTexture.setAngles(0.0f, 0.0f, 0.0f);
    statusStalledTexture.setRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    stalledContainer.add(statusStalledTexture);

    statusContainer.add(stalledContainer);

    emptyContainer.setPosition(0, 0, 320, 55);
    emptyContainer.setVisible(false);
    dispenserEmptyText.setPosition(5, 11, 182, 33);
    dispenserEmptyText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    dispenserEmptyText.setLinespacing(0);
    dispenserEmptyText.setTypedText(touchgfx::TypedText(T_DISPEMTYID));
    emptyContainer.add(dispenserEmptyText);

    statusEmptyTexture.setXY(261, 3);
    statusEmptyTexture.setBitmap(touchgfx::Bitmap(BITMAP_WARNING_48X48_ID));
    statusEmptyTexture.setWidth(48);
    statusEmptyTexture.setHeight(48);
    statusEmptyTexture.setBitmapPosition(0.0f, 0.0f);
    statusEmptyTexture.setScale(1.0f);
    statusEmptyTexture.setCameraDistance(1000.0f);
    statusEmptyTexture.setOrigo(24.0f, 24.0f, 1000.0f);
    statusEmptyTexture.setCamera(24.0f, 24.0f);
    statusEmptyTexture.setAngles(0.0f, 0.0f, 0.0f);
    statusEmptyTexture.setRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    emptyContainer.add(statusEmptyTexture);

    statusContainer.add(emptyContainer);

    readyContainer.setPosition(0, 0, 320, 55);
    readyContainer.setVisible(false);
    dispenserReadyText.setPosition(5, 11, 177, 33);
    dispenserReadyText.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    dispenserReadyText.setLinespacing(0);
    dispenserReadyText.setTypedText(touchgfx::TypedText(T_DISPRDYID));
    readyContainer.add(dispenserReadyText);

    statusReadyTexture.setXY(261, 3);
    statusReadyTexture.setBitmap(touchgfx::Bitmap(BITMAP_READY_48X48_ID));
    statusReadyTexture.setWidth(48);
    statusReadyTexture.setHeight(48);
    statusReadyTexture.setBitmapPosition(0.0f, 0.0f);
    statusReadyTexture.setScale(1.0f);
    statusReadyTexture.setCameraDistance(1000.0f);
    statusReadyTexture.setOrigo(24.0f, 24.0f, 1000.0f);
    statusReadyTexture.setCamera(24.0f, 24.0f);
    statusReadyTexture.setAngles(0.0f, 0.0f, 0.0f);
    statusReadyTexture.setRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    readyContainer.add(statusReadyTexture);

    statusContainer.add(readyContainer);

    mainContainer.add(statusContainer);

    add(mainContainer);

    headerContainer.setPosition(0, 0, 320, 240);
    headerLine.setPosition(0, 35, 320, 10);
    headerLinePainter.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    headerLine.setPainter(headerLinePainter);
    headerLine.setStart(0, 5);
    headerLine.setEnd(320, 5);
    headerLine.setLineWidth(2);
    headerLine.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    headerContainer.add(headerLine);

    digitalClock1.setPosition(250, 10, 70, 28);
    digitalClock1.setColor(touchgfx::Color::getColorFromRGB(0, 73, 144));
    digitalClock1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_36MR));
    digitalClock1.displayLeadingZeroForHourIndicator(true);
    digitalClock1.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR_NO_SECONDS);
    digitalClock1.setTime24Hour(10, 10, 0);
    headerContainer.add(digitalClock1);

    add(headerContainer);

    startupContainer.setPosition(0, 0, 320, 240);
    startupContainer.setVisible(false);
    metrisLogo.setXY(0, 42);
    metrisLogo.setBitmap(touchgfx::Bitmap(BITMAP_METRIS_LOGO_ID));
    startupContainer.add(metrisLogo);

    add(startupContainer);
}

MainViewBase::~MainViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MainViewBase::setupScreen()
{

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &settingsButton)
    {
        //settingsButtonPressed
        //When settingsButton clicked call virtual function
        //Call settingsButtonPressed
        settingsButtonPressed();
    }
    if (&src == &infoButton)
    {
        //infoButtonPressed
        //When infoButton clicked call virtual function
        //Call infoButtonPressed
        infoButtonPressed();
    }
    if (&src == &backButton)
    {
        //backButtonPressed
        //When backButton clicked call virtual function
        //Call backButtonPressed
        backButtonPressed();
    }
    if (&src == &homeButton)
    {
        //homeButtonPressed
        //When homeButton clicked call virtual function
        //Call homeButtonPressed
        homeButtonPressed();
    }
    if (&src == &displaySettingsButton)
    {
        //displaySettingsButtonPressed
        //When displaySettingsButton clicked call virtual function
        //Call displaySettingsButtonPressed
        displaySettingsButtonPressed();
    }
    if (&src == &soundSettingsButton)
    {
        //soundSettingsButtonPressed
        //When soundSettingsButton clicked call virtual function
        //Call soundSettingsButtonPressed
        soundSettingsButtonPressed();
    }
    if (&src == &dispenserSettingsButton)
    {
        //dispenserSettingsButtonPressed
        //When dispenserSettingsButton clicked call virtual function
        //Call dispenserSettingsButtonPressed
        dispenserSettingsButtonPressed();
    }
    if (&src == &screenToutDecButton)
    {
        //decScreenTimeout
        //When screenToutDecButton clicked call virtual function
        //Call decScreenTimeout
        decScreenTimeout();
    }
    if (&src == &screenToutIncButton)
    {
        //incScreenTimeout
        //When screenToutIncButton clicked call virtual function
        //Call incScreenTimeout
        incScreenTimeout();
    }
    if (&src == &darkThemeButton)
    {
        //toggleDarkTheme
        //When darkThemeButton clicked call virtual function
        //Call toggleDarkTheme
        toggleDarkTheme();
    }
    if (&src == &pelQuantDecButton)
    {
        //decPelletQuantity
        //When pelQuantDecButton clicked call virtual function
        //Call decPelletQuantity
        decPelletQuantity();
    }
    if (&src == &pelQuantIncButton)
    {
        //incPelletQuantity
        //When pelQuantIncButton clicked call virtual function
        //Call incPelletQuantity
        incPelletQuantity();
    }
    if (&src == &pelIntervDecButton)
    {
        //decPelletInterval
        //When pelIntervDecButton clicked call virtual function
        //Call decPelletInterval
        decPelletInterval();
    }
    if (&src == &pelIntervIncButton)
    {
        //incPelletInterval
        //When pelIntervIncButton clicked call virtual function
        //Call incPelletInterval
        incPelletInterval();
    }
    if (&src == &pelSpeedDecButton)
    {
        //decPelletSpeed
        //When pelSpeedDecButton clicked call virtual function
        //Call decPelletSpeed
        decPelletSpeed();
    }
    if (&src == &pelSpeedIncButton)
    {
        //incPelletSpeed
        //When pelSpeedIncButton clicked call virtual function
        //Call incPelletSpeed
        incPelletSpeed();
    }
}
