/* USER CODE BEGIN Header */
/**
 ******************************************************************************
 * File Name          : STM32TouchController.cpp
 ******************************************************************************
 * This file is generated by TouchGFX Generator 4.20.0.
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */
/* USER CODE END Header */

/* USER CODE BEGIN STM32TouchController */

#include "stm32h7xx_hal.h"

#include "STM32TouchController.hpp"
#include "config.h"
#include "cst328.h"

static uint16_t xPrev = GUI_WIDTH;
static uint16_t yPrev = GUI_HEIGHT;

void STM32TouchController::init()
{
  /**
   * Initialize touch controller and driver
   *
   */
}

uint16_t x_touch;
uint16_t y_touch;
bool retval = false;
/**
 * By default sampleTouch returns false,
 * return true if a touch has been detected, otherwise false.
 *
 * Coordinates are passed to the caller by reference by x and y.
 *
 * This function is called by the TouchGFX framework.
 * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
 *
 */

uint32_t currentIrqCtr = 0U;
uint32_t previousIrqCtr = 0U;

bool STM32TouchController::sampleTouch(int32_t &x, int32_t &y)
{
  static uint32_t lastSampleTime = 0;
  const uint32_t debounceTimeMs = 30U; /* Touch interrupt is being triggered at about 27ms interval if touchscreen pressed continuously, thus 30ms debounce should be fine */

  if (CST328_GetTouchPressed())
  {
    uint8_t pressure;
    uint32_t currentTime = HAL_GetTick();

    if (currentTime - lastSampleTime >= debounceTimeMs)
    {
      lastSampleTime = currentTime;
      currentIrqCtr = CST328_GetIrqCounter();

      if (currentIrqCtr != previousIrqCtr)
      {
        previousIrqCtr = currentIrqCtr;
        bool validTouch = CST328_GetTouchData(1U, &x_touch, &y_touch, &pressure);
      }
      else
      {
        currentIrqCtr = 0U;
        previousIrqCtr = 0U;
        CST328_ResetTouchPressed();
      }
    }
    retval = true;
  }
  else
  {
    retval = false;
  }

  x = (int32_t)x_touch;
  y = (int32_t)y_touch;

  return retval;
}

/* USER CODE END STM32TouchController */

/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
